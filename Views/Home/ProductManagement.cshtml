@model dynamic


<h1>Product Management</h1>

<h2>Add Shoes</h2>
@using (Html.BeginForm("PM_AddShoe", "Home", FormMethod.Post))
{

    <!--<partial name="_PM_AddShoePartial" />-->
}
<form id="ShoeUploadForm" method="post" enctype="multipart/form-data" class="photoForm">
    <label>Brand</label>
    <select name="shoe.BrandID">
        @foreach (var item in Model.Brands)
        {
            <option value="@item.BrandID">@item.Name</option>
        }
    </select>
    <label>Category</label>
    <select name="shoe.CategoryID">
        @foreach (var item in Model.Categories)
        {
            <option value="@item.CategoryID">@item.Name</option>
        }
    </select>
    <label>Name</label>
    <input type="text" name="shoe.name" />
    <label>Sex</label>
    <select name="shoe.sex">
        <option value="Male">Male</option>
        <option value="Female">Female</option>
        <option value="Unisex" selected>Unisex</option>
        <option value="Kids">Kids</option>
    </select>
    <label>Description</label>
    <input type="text" name="shoe.description" />
    <label>Weight</label>
    <input type="number" name="shoe.weight" />

    <br></br>
    <!--Color
    <label>Color</label>
    <input type="text" name="color.name" />
    <label>Hexa</label>
    <input type="text" name="color.hexa_code" />
    <input type="hidden" name="color.shoeid" value="" />

    <input type="hidden" name="contenttype" value="asdf" />

    <input type="file" name="picturedata" multiple>
     -->
    <div id="ColorContainer">
        <!-- Inputs generated by addColorcInput() -->
    </div>
    <button type="button" id="addColorInput">Add Color</button>
    <input type="submit" value="Add" />
</form>

<script>
    const ColorUploadForm = document.getElementById("ShoeUploadForm");
    const ColorInputsContainer = document.getElementById("ColorInputsContainer");
    const addColorInputButton = document.getElementById("addColorInput");

    let colorInputIndex = 0; // Initialize the index

    function addColorInput() {
        // Create a container div element
        var container = document.createElement("div");

        // Create and append the label for Color
        var colorLabel = document.createElement("label");
        colorLabel.textContent = "Color";
        container.appendChild(colorLabel);

        // Create and append the input for color name
        var colorNameInput = document.createElement("input");
        colorNameInput.setAttribute("type", "text");
        colorNameInput.setAttribute("name", `Colors[${colorInputIndex}].Name`);
        container.appendChild(colorNameInput);

        // Create and append the label for Hexa
        var hexaLabel = document.createElement("label");
        hexaLabel.textContent = "Hexa";
        container.appendChild(hexaLabel);

        // Create and append the input for hexa code
        var hexaCodeInput = document.createElement("input");
        hexaCodeInput.setAttribute("type", "color");
        hexaCodeInput.setAttribute("name", `Colors[${colorInputIndex}].Hexa_code`);
        container.appendChild(hexaCodeInput);

        // Create and append the input for file upload with multiple attribute
        var fileInput = document.createElement("input");
        fileInput.setAttribute("type", "file");
        fileInput.setAttribute("name", `Colors[${colorInputIndex}].PictureData`);
        fileInput.setAttribute("multiple", "multiple");
        container.appendChild(fileInput);

        // Get a reference to the element where you want to append the container
        var targetElement = document.getElementById("ColorContainer");

        // Append the container to the target element
        targetElement.appendChild(container);

        // Increment the index for the next color input
        colorInputIndex++;
    }

    addColorInputButton.addEventListener("click", addColorInput);
</script>


